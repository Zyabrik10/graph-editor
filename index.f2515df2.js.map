{"mappings":"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","sources":["<anon>","src/js/index.js","src/js/classes/index.js","src/js/classes/Vertex.js","src/js/config.js","src/js/classes/Graph.js","src/js/classes/Edge.js","src/js/events/addVertexEvent.js","src/js/utils/addVertex.js","src/js/utils/addVertexUI.js","src/js/components/VertexUI.js","src/js/utils/addEdge.js","src/js/utils/addEdgeUI.js","src/js/components/EdgeUI.js","src/js/utils/updateGraphInfo.js","src/js/utils/editVertexLabel.js","src/js/utils/removeVertex.js","src/js/events/moveVerteciesEvent.js","src/js/update.js"],"sourcesContent":["const $ef19e442e0cefa4b$export$c83be1687c028fc9 = {\n    canvas: undefined,\n    ctx: undefined,\n    graph: undefined,\n    convasConfig: {\n        size: {\n            width: 600,\n            height: 400\n        }\n    }\n};\nconst $ef19e442e0cefa4b$export$1c891a3202c0ba6a = {\n    getRandomInt: (min, max)=>Math.floor(Math.random() * (max - min + 1) + min),\n    getDistance: (a, b)=>Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2))\n};\n\n\nclass $4868059bf11d5518$export$2e2bcd8739ae039 {\n    constructor({ size: size, color: color, id: id, coor: coor, label: label }){\n        this.size = size;\n        this.color = color;\n        this.id = id;\n        this.coor = coor;\n        this.label = label;\n    }\n    draw() {\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.strokeStyle = this.color;\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.beginPath();\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.arc(this.coor.x, this.coor.y, this.size, 0, 2 * Math.PI);\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.stroke();\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.fillStyle = \"white\";\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.beginPath();\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.arc(this.coor.x, this.coor.y, this.size, 0, 2 * Math.PI);\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.fill();\n        const contentSize = this.size / (this.label.length * 0.8);\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.fillStyle = \"black\";\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.textAlign = \"center\";\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.font = `${contentSize}px Arial`;\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.fillText(this.label, this.coor.x, this.coor.y + contentSize / 2);\n    }\n}\n\n\nclass $4966f406eb7407d4$export$2e2bcd8739ae039 {\n    constructor(vertices = [], edges = []){\n        this.vertices = vertices;\n        this.edges = edges;\n    }\n    addVertex(vertex) {\n        this.vertices.push(vertex);\n    }\n    getVertex(vertexId) {\n        return this.vertices.filter((vertex)=>vertex.id === vertexId)[0];\n    }\n    getVertexByLabel(vertexLabel) {\n        return this.vertices.filter((vertex)=>vertex.label === vertexLabel)[0];\n    }\n    removeVertex(vertexId) {\n        this.vertices = this.vertices.filter((vertex)=>vertex.id !== vertexId);\n    }\n    removeEdges(vertexId) {\n        this.edges = this.edges.filter((edge)=>edge.start.id !== vertexId && edge.end.id !== vertexId);\n    }\n    removeEdge(edgeId) {\n        this.edges = this.edges.filter((edge)=>edge.id !== edgeId);\n    }\n    addEdge(edge) {\n        this.edges.push(edge);\n    }\n    drawVertices() {\n        this.vertices.forEach((vertex)=>vertex.draw());\n    }\n    drawEdges() {\n        this.edges.forEach((edge)=>edge.draw());\n    }\n    draw() {\n        this.drawEdges();\n        this.drawVertices();\n    }\n}\n\n\n\nclass $4530f81e5eca2588$export$2e2bcd8739ae039 {\n    constructor({ weight: weight, start: start, end: end, id: id }){\n        this.weight = weight;\n        this.start = start;\n        this.end = end;\n        this.id = id;\n    }\n    draw() {\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.strokeStyle = \"black\";\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.lineWidth = 1;\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.beginPath();\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.moveTo(this.start.coor.x, this.start.coor.y);\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.lineTo(this.end.coor.x, this.end.coor.y);\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.stroke();\n    }\n}\n\n\n\n\n\n\n\n\n\nfunction $1143e908a10d2bae$export$2e2bcd8739ae039(vertex) {\n    return `\n        <li class=\"vertex-editor-item\" data-id=\"${vertex.id}\">\n            <div>\n                <input class=\"vertex-label-input\" type=\"text\" value=\"${vertex.label}\"/>\n                <button class=\"remove-vertex remove-button\" class=\"remove-button\">Delete</button>\n            </div>\n            <ul class=\"edge-list\"></ul>\n            <button class=\"add-edge\">Add Edge</button>\n        </li>`;\n}\n\n\n\n\nfunction $bb6ba99773930e5e$export$2e2bcd8739ae039(edge) {\n    return `\n    <li class=\"edge-editor-item\" data-id=\"${edge.id}\">\n        <div>\n            <span class=\"current-vertex\">${edge.start.label}</span>\n            <span> &rarr; </span>    \n            <input class=\"to-vertex\" type=\"text\" value=\"${edge.end.label}\"/>\n        </div>\n        <button class=\"remove-edge remove-button\">Remove</button>\n    </li>`;\n}\n\n\n\nfunction $a4e96794beefa304$export$2e2bcd8739ae039(edge, edgeList) {\n    const edgeEditorComponent = (0, $bb6ba99773930e5e$export$2e2bcd8739ae039)(edge);\n    edgeList.insertAdjacentHTML(\"beforeend\", edgeEditorComponent);\n    const input = document.querySelector(`.edge-editor-item[data-id=\"${edge.id}\"] .to-vertex`);\n    const remove = document.querySelector(`.edge-editor-item[data-id=\"${edge.id}\"] .remove-edge`);\n    input.addEventListener(\"input\", ()=>{\n        const vertex = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.getVertexByLabel(input.value);\n        if (!vertex) {\n            console.log(`No such vertex as ${input.value}`);\n            return;\n        }\n        edge.end = vertex;\n    });\n    remove.addEventListener(\"click\", ()=>{\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.removeEdge(edge.id);\n        edgeList.removeChild(document.querySelector(`.edge-editor-item[data-id=\"${edge.id}\"]`));\n    });\n}\n\n\n\nconst $93081b1744c345dc$var$v = document.querySelector(\"#num-vertices\");\nconst $93081b1744c345dc$var$e = document.querySelector(\"#num-edges\");\nfunction $93081b1744c345dc$export$2e2bcd8739ae039() {\n    $93081b1744c345dc$var$v.innerText = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices.length;\n    $93081b1744c345dc$var$e.innerText = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges.length;\n}\n\n\nfunction $6e2cfe4e15235f61$export$2e2bcd8739ae039(vertex, edgeList) {\n    if ((0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices.length < 2) {\n        console.log(\"Too few vertices\");\n        return;\n    }\n    const weight = 0;\n    const start = vertex;\n    let end;\n    const id = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges.length + 1;\n    let hasAllEdges = true;\n    for(let i = 0; i < (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices.length; i++){\n        if ((0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[i].id === start.id) continue;\n        let isEsdge = false;\n        for(let j = 0; j < (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges.length; j++)if ((0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges[j].start.id === start.id && (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges[j].end.id === (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[i].id || (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges[j].end.id === start.id && (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.edges[j].start.id === (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[i].id) {\n            isEsdge = true;\n            break;\n        }\n        if (!isEsdge) {\n            end = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[i];\n            hasAllEdges = false;\n            break;\n        }\n    }\n    if (hasAllEdges) {\n        console.log(\"No other vertices to connect\");\n        return;\n    }\n    const edge = new (0, $4530f81e5eca2588$export$2e2bcd8739ae039)({\n        weight: weight,\n        start: start,\n        end: end,\n        id: id\n    });\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.addEdge(edge);\n    (0, $a4e96794beefa304$export$2e2bcd8739ae039)(edge, edgeList);\n    (0, $93081b1744c345dc$export$2e2bcd8739ae039)();\n}\n\n\n\nfunction $439847be55c7e36f$export$2e2bcd8739ae039(vertexId, newLabel) {\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.getVertex(vertexId).label = newLabel;\n}\n\n\n\nfunction $d0e7dcf1ad500493$export$2e2bcd8739ae039(vertexId, vertexEditor) {\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.removeVertex(vertexId);\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.removeEdges(vertexId);\n    vertexEditor.remove();\n}\n\n\nconst $37ea28a82395e569$var$vertecies = document.querySelector(\".vertecies\");\nfunction $37ea28a82395e569$export$2e2bcd8739ae039(vertex) {\n    $37ea28a82395e569$var$vertecies.insertAdjacentHTML(\"beforeend\", (0, $1143e908a10d2bae$export$2e2bcd8739ae039)(vertex)); // inserting ui\n    const vertexEditorBlock = document.querySelector(`.vertex-editor-item[data-id=\"${vertex.id}\"]`);\n    const vertexInputLabel = vertexEditorBlock.querySelector(\".vertex-label-input\");\n    const removeVertexButton = vertexEditorBlock.querySelector(\".remove-vertex\");\n    const addEdgeButton = vertexEditorBlock.querySelector(\".add-edge\");\n    const edgeList = vertexEditorBlock.querySelector(\".edge-list\");\n    removeVertexButton.addEventListener(\"click\", (0, $d0e7dcf1ad500493$export$2e2bcd8739ae039).bind(null, vertex.id, vertexEditorBlock));\n    vertexInputLabel.addEventListener(\"input\", ()=>(0, $439847be55c7e36f$export$2e2bcd8739ae039)(vertex.id, vertexInputLabel.value));\n    addEdgeButton.addEventListener(\"click\", (0, $6e2cfe4e15235f61$export$2e2bcd8739ae039).bind(null, vertex, edgeList));\n}\n\n\n\nfunction $8b1fa9e8d046aeb1$export$2e2bcd8739ae039({ id: id, color: color, size: size, coor: coor, label: label }) {\n    const vertex = new (0, $4868059bf11d5518$export$2e2bcd8739ae039)({\n        id: id,\n        color: color,\n        size: size,\n        coor: coor,\n        label: label\n    });\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.addVertex(vertex);\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.draw();\n    (0, $37ea28a82395e569$export$2e2bcd8739ae039)(vertex);\n    (0, $93081b1744c345dc$export$2e2bcd8739ae039)();\n}\n\n\n\n\nfunction $40a78ac816ad6fea$export$2e2bcd8739ae039() {\n    const button = document.querySelector(\".add-vertex\");\n    let c = 0;\n    const size = 20;\n    button.addEventListener(\"click\", ()=>{\n        if ((0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices.length === 0) c = 0;\n        (0, $8b1fa9e8d046aeb1$export$2e2bcd8739ae039)({\n            id: c,\n            color: 'blue',\n            size: size,\n            coor: {\n                x: (0, $ef19e442e0cefa4b$export$1c891a3202c0ba6a).getRandomInt(size, (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.width - size),\n                y: (0, $ef19e442e0cefa4b$export$1c891a3202c0ba6a).getRandomInt(size, (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.height - size)\n            },\n            label: (c++).toString()\n        });\n    });\n}\n\n\n\nfunction $0a046d6d89a6fd12$export$2e2bcd8739ae039() {\n    let index;\n    let isDragging = false;\n    let offset = {\n        x: 0,\n        y: 0\n    };\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.addEventListener(\"mousemove\", ({ offsetX: x, offsetY: y })=>{\n        if (!isDragging && index === undefined) {\n            (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.style.cursor = \"auto\";\n            for (const element of (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices){\n                const vertex = element;\n                const distance = (0, $ef19e442e0cefa4b$export$1c891a3202c0ba6a).getDistance(vertex.coor, {\n                    x: x,\n                    y: y\n                });\n                if (distance < vertex.size) {\n                    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.style.cursor = \"grab\";\n                    break;\n                }\n            }\n            return;\n        }\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.style.cursor = \"grabbing\";\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[index].coor.x = x + offset.x;\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[index].coor.y = y + offset.y;\n    });\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.addEventListener(\"mousedown\", ({ offsetX: x, offsetY: y })=>{\n        for(let i = 0; i < (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices.length; i++){\n            const vertex = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.vertices[i];\n            const distance = (0, $ef19e442e0cefa4b$export$1c891a3202c0ba6a).getDistance(vertex.coor, {\n                x: x,\n                y: y\n            });\n            if (distance < vertex.size) {\n                (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.style.cursor = \"grabbing\";\n                index = i;\n                isDragging = true;\n                offset.x = vertex.coor.x - x;\n                offset.y = vertex.coor.y - y;\n                break;\n            }\n        }\n    });\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.addEventListener(\"mouseup\", ()=>{\n        (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.style.cursor = \"auto\";\n        index = undefined;\n        isDragging = false;\n        offset.x = 0;\n        offset.y = 0;\n    });\n}\n\n\n\nfunction $9131d4c7823e6931$export$2e2bcd8739ae039() {\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx.clearRect(0, 0, (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.width, (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.height);\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph.draw();\n    requestAnimationFrame($9131d4c7823e6931$export$2e2bcd8739ae039);\n}\n\n\nwindow.addEventListener(\"load\", function() {\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas = document.querySelector(\"canvas\");\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).ctx = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.getContext(\"2d\");\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.width = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).convasConfig.size.width;\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).canvas.height = (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).convasConfig.size.height;\n    (0, $ef19e442e0cefa4b$export$c83be1687c028fc9).graph = new (0, $4966f406eb7407d4$export$2e2bcd8739ae039)();\n    (0, $9131d4c7823e6931$export$2e2bcd8739ae039)();\n    (0, $40a78ac816ad6fea$export$2e2bcd8739ae039)();\n    (0, $0a046d6d89a6fd12$export$2e2bcd8739ae039)();\n});\n\n\n//# sourceMappingURL=index.f2515df2.js.map\n","import { Graph} from \"./classes\";\r\nimport { conf } from \"./config\";\r\nimport addVertexEvent from \"./events/addVertexEvent\";\r\nimport moveVerteciesEvent from \"./events/moveVerteciesEvent\";\r\nimport update from \"./update\";\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n  conf.canvas = document.querySelector(\"canvas\");\r\n  conf.ctx = conf.canvas.getContext(\"2d\");\r\n\r\n  conf.canvas.width = conf.convasConfig.size.width;\r\n  conf.canvas.height = conf.convasConfig.size.height;\r\n\r\n  conf.graph = new Graph();\r\n\r\n  update();\r\n    \r\n  addVertexEvent();\r\n  moveVerteciesEvent();\r\n});","export {default as Vertex } from \"./Vertex.js\";\r\nexport { default as Graph } from \"./Graph.js\";\r\nexport { default as Edge } from \"./Edge.js\";","import { conf } from \"../config\";\r\n\r\nexport default class Vertex {\r\n  constructor({ size, color, id, coor, label }) {\r\n    this.size = size;\r\n    this.color = color;\r\n    this.id = id;\r\n    this.coor = coor;\r\n    this.label = label;\r\n  }\r\n\r\n  draw() {\r\n    conf.ctx.strokeStyle = this.color;\r\n    conf.ctx.beginPath();\r\n    conf.ctx.arc(this.coor.x, this.coor.y, this.size, 0, 2 * Math.PI);\r\n    conf.ctx.stroke();\r\n\r\n    conf.ctx.fillStyle = \"white\";\r\n    conf.ctx.beginPath();\r\n    conf.ctx.arc(this.coor.x, this.coor.y, this.size, 0, 2 * Math.PI);\r\n    conf.ctx.fill();\r\n\r\n    const contentSize = this.size / (this.label.length * 0.8); \r\n\r\n    conf.ctx.fillStyle = \"black\";\r\n    conf.ctx.textAlign = \"center\";\r\n    conf.ctx.font = `${contentSize}px Arial`;\r\n    conf.ctx.fillText(this.label, this.coor.x, this.coor.y + contentSize / 2);\r\n  }\r\n}\r\n","export const conf = {\r\n  canvas: undefined,\r\n  ctx: undefined,\r\n  graph: undefined,\r\n  convasConfig: {\r\n    size: {\r\n      width: 600,\r\n      height: 400,\r\n    },\r\n  }\r\n};\r\n\r\nexport const math = {\r\n  getRandomInt: (min, max) => Math.floor(Math.random() * (max - min + 1) + min),\r\n  getDistance: (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2)),\r\n};\r\n","export default class Graph {\r\n  constructor(vertices = [], edges = []) {\r\n    this.vertices = vertices;\r\n    this.edges = edges;\r\n  }\r\n\r\n  addVertex(vertex) {\r\n    this.vertices.push(vertex);\r\n  }\r\n\r\n  getVertex(vertexId) {\r\n    return this.vertices.filter((vertex) => vertex.id === vertexId)[0];\r\n  }\r\n\r\n  getVertexByLabel(vertexLabel) {\r\n    return this.vertices.filter((vertex) => vertex.label === vertexLabel)[0];\r\n  }\r\n\r\n  removeVertex(vertexId) {\r\n    this.vertices = this.vertices.filter((vertex) => vertex.id !== vertexId);\r\n  }\r\n\r\n  removeEdges(vertexId) {\r\n    this.edges = this.edges.filter(\r\n      (edge) => edge.start.id !== vertexId && edge.end.id !== vertexId\r\n    );\r\n  }\r\n\r\n  removeEdge(edgeId) {\r\n    this.edges = this.edges.filter((edge) => edge.id !== edgeId);\r\n  }\r\n\r\n  addEdge(edge) {\r\n    this.edges.push(edge);\r\n  }\r\n\r\n  drawVertices() {\r\n    this.vertices.forEach((vertex) => vertex.draw());\r\n  }\r\n  drawEdges() {\r\n    this.edges.forEach((edge) => edge.draw());\r\n  }\r\n\r\n  draw() {\r\n    this.drawEdges();\r\n    this.drawVertices();\r\n  }\r\n}\r\n","import { conf } from \"../config\";\r\n\r\nexport default class Edge {\r\n  constructor({ weight, start, end, id }) {\r\n    this.weight = weight;\r\n    this.start = start;\r\n    this.end = end;\r\n    this.id = id;\r\n  }\r\n\r\n  draw() {\r\n    conf.ctx.strokeStyle = \"black\";\r\n    conf.ctx.lineWidth = 1;\r\n    conf.ctx.beginPath();\r\n    conf.ctx.moveTo(this.start.coor.x, this.start.coor.y);\r\n    conf.ctx.lineTo(this.end.coor.x, this.end.coor.y);\r\n    conf.ctx.stroke();\r\n  }\r\n}\r\n","import { Vertex } from \"../classes\";\r\nimport { math, conf } from \"../config\";\r\nimport addVertex from \"../utils/addVertex\";\r\nimport addVertexUI from \"../utils/addVertexUI\";\r\nimport updateGraphInfo from \"../utils/updateGraphInfo\";\r\n\r\nexport default function addVertexEvent() {\r\n  const button = document.querySelector(\".add-vertex\");\r\n\r\n  let c = 0;\r\n  const size = 20;\r\n\r\n  button.addEventListener(\"click\", () => {\r\n    if (conf.graph.vertices.length === 0) c = 0;\r\n\r\n    addVertex({\r\n      id: c,\r\n      color: 'blue',\r\n      size,\r\n      coor: {\r\n        x: math.getRandomInt(size, conf.canvas.width - size),\r\n        y: math.getRandomInt(size, conf.canvas.height - size),\r\n      },\r\n      label: (c++).toString(),\r\n    });\r\n  });\r\n}","import { Vertex } from \"../classes\";\r\nimport { conf } from \"../config\";\r\nimport addVertexUI from \"./addVertexUI\";\r\nimport updateGraphInfo from \"./updateGraphInfo\";\r\n\r\nexport default function addVertex({id, color, size, coor, label}) {\r\n    const vertex = new Vertex({\r\n      id,\r\n      color,\r\n      size,\r\n      coor,\r\n      label,\r\n    });     \r\n\r\n    conf.graph.addVertex(vertex);\r\n    conf.graph.draw();\r\n\r\n  addVertexUI(vertex);\r\n  updateGraphInfo();\r\n}","import VertexUI from \"../components/VertexUI\";\r\nimport addEdge from \"./addEdge\";\r\nimport editVertexLabel from \"./editVertexLabel\";\r\nimport removeVertex from \"./removeVertex\";\r\n\r\nconst vertecies = document.querySelector(\".vertecies\");\r\n\r\nexport default function addVertexUI(vertex) {\r\n  vertecies.insertAdjacentHTML(\"beforeend\", VertexUI(vertex)); // inserting ui\r\n\r\n  const vertexEditorBlock = document.querySelector(`.vertex-editor-item[data-id=\"${vertex.id}\"]`);\r\n  const vertexInputLabel = vertexEditorBlock.querySelector(\".vertex-label-input\");\r\n  const removeVertexButton = vertexEditorBlock.querySelector(\".remove-vertex\");\r\n  const addEdgeButton = vertexEditorBlock.querySelector(\".add-edge\");\r\n  const edgeList = vertexEditorBlock.querySelector(\".edge-list\");\r\n\r\n  removeVertexButton.addEventListener(\"click\",removeVertex.bind(null,vertex.id, vertexEditorBlock));\r\n  vertexInputLabel.addEventListener(\"input\", () =>editVertexLabel(vertex.id, vertexInputLabel.value));\r\n  addEdgeButton.addEventListener(\"click\", addEdge.bind(null, vertex, edgeList));\r\n}\r\n","export default function VertexUI(vertex) {\r\n  return `\r\n        <li class=\"vertex-editor-item\" data-id=\"${vertex.id}\">\r\n            <div>\r\n                <input class=\"vertex-label-input\" type=\"text\" value=\"${vertex.label}\"/>\r\n                <button class=\"remove-vertex remove-button\" class=\"remove-button\">Delete</button>\r\n            </div>\r\n            <ul class=\"edge-list\"></ul>\r\n            <button class=\"add-edge\">Add Edge</button>\r\n        </li>`;\r\n}\r\n","import { Edge } from \"../classes\";\r\nimport { conf } from \"../config\";\r\nimport addEdgeUI from \"./addEdgeUI\";\r\nimport updateGraphInfo from \"./updateGraphInfo\";\r\n\r\nexport default function addEdge(vertex, edgeList) {\r\n  if (conf.graph.vertices.length < 2) {\r\n    console.log(\"Too few vertices\");\r\n    return;\r\n  }\r\n\r\n  const weight = 0;\r\n  const start = vertex;\r\n  let end;\r\n  const id = conf.graph.edges.length + 1;\r\n  let hasAllEdges = true;\r\n\r\n  for (let i = 0; i < conf.graph.vertices.length; i++) {\r\n    if (conf.graph.vertices[i].id === start.id) continue;\r\n\r\n    let isEsdge = false;\r\n\r\n    for (let j = 0; j < conf.graph.edges.length; j++) {\r\n      if (\r\n        (conf.graph.edges[j].start.id === start.id &&\r\n          conf.graph.edges[j].end.id === conf.graph.vertices[i].id) ||\r\n        (conf.graph.edges[j].end.id === start.id &&\r\n          conf.graph.edges[j].start.id === conf.graph.vertices[i].id)\r\n      ) {\r\n        isEsdge = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!isEsdge) {\r\n      end = conf.graph.vertices[i];\r\n      hasAllEdges = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (hasAllEdges) {\r\n    console.log(\"No other vertices to connect\");\r\n    return;\r\n  }\r\n\r\n  const edge = new Edge({\r\n    weight,\r\n    start,\r\n    end,\r\n    id,\r\n  });\r\n\r\n  conf.graph.addEdge(edge);\r\n\r\n  addEdgeUI(edge, edgeList);\r\n  updateGraphInfo();\r\n}\r\n","import EdgeUI from \"../components/EdgeUI\";\r\nimport { conf } from \"../config\";\r\n\r\n\r\nexport default function addEdgeUI(edge, edgeList) {\r\n    const edgeEditorComponent = EdgeUI(edge);\r\n\r\n    edgeList.insertAdjacentHTML(\"beforeend\", edgeEditorComponent);\r\n\r\n    const input = document.querySelector(\r\n      `.edge-editor-item[data-id=\"${edge.id}\"] .to-vertex`\r\n    );\r\n\r\n    const remove = document.querySelector(\r\n      `.edge-editor-item[data-id=\"${edge.id}\"] .remove-edge`\r\n    );\r\n\r\n    input.addEventListener(\"input\", () => {\r\n        const vertex = conf.graph.getVertexByLabel(input.value);\r\n\r\n        if (!vertex) {\r\n            console.log(`No such vertex as ${input.value}`);\r\n            return;\r\n        }\r\n\r\n        edge.end = vertex;\r\n    });\r\n\r\n    remove.addEventListener(\"click\", () => {\r\n        conf.graph.removeEdge(edge.id);\r\n        edgeList.removeChild(document.querySelector(`.edge-editor-item[data-id=\"${edge.id}\"]`));\r\n    });\r\n}\r\n","export default function EdgeUI(edge) {\r\n    return `\r\n    <li class=\"edge-editor-item\" data-id=\"${edge.id}\">\r\n        <div>\r\n            <span class=\"current-vertex\">${edge.start.label}</span>\r\n            <span> &rarr; </span>    \r\n            <input class=\"to-vertex\" type=\"text\" value=\"${edge.end.label}\"/>\r\n        </div>\r\n        <button class=\"remove-edge remove-button\">Remove</button>\r\n    </li>`;\r\n}\r\n","import { conf } from \"../config\";\r\n\r\nconst v = document.querySelector(\"#num-vertices\");\r\nconst e = document.querySelector(\"#num-edges\");\r\n\r\nexport default function updateGraphInfo() {\r\n    v.innerText = conf.graph.vertices.length;\r\n    e.innerText = conf.graph.edges.length;\r\n}","import { conf } from \"../config\";\r\n\r\nexport default function editVertexLabel(vertexId, newLabel) {\r\n    conf.graph.getVertex(vertexId).label = newLabel;\r\n}","import { conf } from \"../config\";\r\n\r\nexport default function removeVertex(vertexId, vertexEditor) {\r\n  conf.graph.removeVertex(vertexId);\r\n  conf.graph.removeEdges(vertexId);\r\n  vertexEditor.remove();\r\n}\r\n","import { conf, math } from \"../config\";\r\n\r\nexport default function moveVerteciesEvent() {\r\n  let index;\r\n  let isDragging = false;\r\n  let offset = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  conf.canvas.addEventListener(\"mousemove\", ({ offsetX: x, offsetY: y }) => {\r\n    if (!isDragging && index === undefined) {\r\n      conf.canvas.style.cursor = \"auto\";\r\n\r\n      for (const element of conf.graph.vertices) {\r\n        const vertex = element;\r\n        const distance = math.getDistance(vertex.coor, { x, y });\r\n\r\n        if (distance < vertex.size) {\r\n          conf.canvas.style.cursor = \"grab\";\r\n          break;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    conf.canvas.style.cursor = \"grabbing\";\r\n\r\n    conf.graph.vertices[index].coor.x = x + offset.x;\r\n    conf.graph.vertices[index].coor.y = y + offset.y;\r\n  });\r\n\r\n  conf.canvas.addEventListener(\"mousedown\", ({ offsetX: x, offsetY: y }) => {\r\n    for (let i = 0; i < conf.graph.vertices.length; i++) {\r\n      const vertex = conf.graph.vertices[i];\r\n      const distance = math.getDistance(vertex.coor, { x, y });\r\n\r\n      if (distance < vertex.size) {\r\n        conf.canvas.style.cursor = \"grabbing\";\r\n        index = i;\r\n        isDragging = true;\r\n\r\n        offset.x = vertex.coor.x - x;\r\n        offset.y = vertex.coor.y - y;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n\r\n  conf.canvas.addEventListener(\"mouseup\", () => {\r\n    conf.canvas.style.cursor = \"auto\";\r\n    index = undefined;\r\n    isDragging = false;\r\n    offset.x = 0;\r\n    offset.y = 0;\r\n  });\r\n}\r\n","import { conf } from \"./config\";\r\n\r\nexport default function update() {\r\n  conf.ctx.clearRect(0, 0, conf.canvas.width, conf.canvas.height);\r\n  conf.graph.draw();\r\n  requestAnimationFrame(update);\r\n}\r\n"],"names":["$ef19e442e0cefa4b$export$c83be1687c028fc9","canvas","undefined","ctx","graph","convasConfig","size","width","height","$ef19e442e0cefa4b$export$1c891a3202c0ba6a","getRandomInt","min","max","Math","floor","random","getDistance","a","b","sqrt","pow","x","y","$4868059bf11d5518$export$2e2bcd8739ae039","constructor","color","id","coor","label","draw","strokeStyle","beginPath","arc","PI","stroke","fillStyle","fill","contentSize","length","textAlign","font","fillText","$4966f406eb7407d4$export$2e2bcd8739ae039","vertices","edges","addVertex","vertex","push","getVertex","vertexId","filter","getVertexByLabel","vertexLabel","removeVertex","removeEdges","edge","start","end","removeEdge","edgeId","addEdge","drawVertices","forEach","drawEdges","$4530f81e5eca2588$export$2e2bcd8739ae039","weight","lineWidth","moveTo","lineTo","$93081b1744c345dc$var$v","document","querySelector","$93081b1744c345dc$var$e","$93081b1744c345dc$export$2e2bcd8739ae039","innerText","$6e2cfe4e15235f61$export$2e2bcd8739ae039","edgeList","console","log","hasAllEdges","i","isEsdge","j","edgeEditorComponent","insertAdjacentHTML","input","remove","addEventListener","value","removeChild","$d0e7dcf1ad500493$export$2e2bcd8739ae039","vertexEditor","$37ea28a82395e569$var$vertecies","window","index","isDragging","offset","getContext","$9131d4c7823e6931$export$2e2bcd8739ae039","clearRect","requestAnimationFrame","button","c","vertexEditorBlock","vertexInputLabel","removeVertexButton","addEdgeButton","bind","newLabel","toString","offsetX","offsetY","element","style","cursor","distance"],"version":3,"file":"index.f2515df2.js.map"}